/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package annotator;

import java.awt.BorderLayout;
import java.awt.Canvas;
import java.awt.Color;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.json.JSONObject;
import uk.co.caprica.vlcj.player.MediaPlayerFactory;
import uk.co.caprica.vlcj.player.embedded.EmbeddedMediaPlayer;
import uk.co.caprica.vlcj.player.embedded.videosurface.CanvasVideoSurface;

/**
 *
 * @author Raviya
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    private Canvas canvas;
    private MediaPlayerFactory mediaPlayerFactory;
    private EmbeddedMediaPlayer mediaPlayer;
    Map<Double, Annotation> map = new HashMap<>();
    private JFileChooser j;
    private JOptionPane jOptionPane;

    public MainJFrame() {
        initComponents();
        changeEmotionBtnState(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        openBtn = new javax.swing.JButton();
        fileNameText = new javax.swing.JLabel();
        videoPanel = new javax.swing.JPanel();
        pauseBtn = new javax.swing.JButton();
        happyBtn = new javax.swing.JButton();
        nervousBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sadBtn = new javax.swing.JButton();
        angryBtn = new javax.swing.JButton();
        otherFacialBtn = new javax.swing.JButton();
        openedBtn = new javax.swing.JButton();
        closedBtn = new javax.swing.JButton();
        otherGuestureBtn = new javax.swing.JButton();
        voiceNervousBtn = new javax.swing.JButton();
        confidentBtn = new javax.swing.JButton();
        angryVoiceBtn = new javax.swing.JButton();
        otherVoiceBtn = new javax.swing.JButton();
        stopBtn = new javax.swing.JButton();
        exportBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        openBtn.setText("Open");
        openBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout videoPanelLayout = new javax.swing.GroupLayout(videoPanel);
        videoPanel.setLayout(videoPanelLayout);
        videoPanelLayout.setHorizontalGroup(
            videoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 246, Short.MAX_VALUE)
        );
        videoPanelLayout.setVerticalGroup(
            videoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 124, Short.MAX_VALUE)
        );

        pauseBtn.setText("Pause");
        pauseBtn.setEnabled(false);
        pauseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseBtnActionPerformed(evt);
            }
        });

        happyBtn.setText("happy");
        happyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                happyBtnActionPerformed(evt);
            }
        });

        nervousBtn.setText("Nervous");
        nervousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nervousBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Facial Expressions");

        jLabel2.setText("Guestures");

        jLabel3.setText("Voice");

        sadBtn.setText("Sad");
        sadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sadBtnActionPerformed(evt);
            }
        });

        angryBtn.setText("Angry");
        angryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                angryBtnActionPerformed(evt);
            }
        });

        otherFacialBtn.setText("Other");
        otherFacialBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherFacialBtnActionPerformed(evt);
            }
        });

        openedBtn.setText("Opened");
        openedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openedBtnActionPerformed(evt);
            }
        });

        closedBtn.setText("Closed");
        closedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closedBtnActionPerformed(evt);
            }
        });

        otherGuestureBtn.setText("Other");
        otherGuestureBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherGuestureBtnActionPerformed(evt);
            }
        });

        voiceNervousBtn.setText("Nervous");
        voiceNervousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voiceNervousBtnActionPerformed(evt);
            }
        });

        confidentBtn.setText("Confident");
        confidentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confidentBtnActionPerformed(evt);
            }
        });

        angryVoiceBtn.setText("Angry");
        angryVoiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                angryVoiceBtnActionPerformed(evt);
            }
        });

        otherVoiceBtn.setText("Other");
        otherVoiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherVoiceBtnActionPerformed(evt);
            }
        });

        stopBtn.setText("Stop");
        stopBtn.setEnabled(false);
        stopBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopBtnActionPerformed(evt);
            }
        });

        exportBtn.setText("Export");
        exportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBtnActionPerformed(evt);
            }
        });

        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(videoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(fileNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(35, 35, 35)
                                    .addComponent(openBtn)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel1)
                                                .addComponent(jLabel2))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(voiceNervousBtn)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(confidentBtn)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(angryVoiceBtn)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(otherVoiceBtn))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(happyBtn)
                                                    .addGap(26, 26, 26)
                                                    .addComponent(sadBtn)
                                                    .addGap(30, 30, 30)
                                                    .addComponent(angryBtn)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(otherFacialBtn))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(nervousBtn)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(openedBtn)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(closedBtn)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(otherGuestureBtn)))
                                            .addGap(4, 4, 4))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 384, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pauseBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(stopBtn)))
                                .addGap(2, 2, 2)))
                        .addGap(112, 112, 112))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(exportBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exitBtn)
                        .addGap(0, 461, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportBtn)
                    .addComponent(exitBtn))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openBtn)
                    .addComponent(fileNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(videoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pauseBtn)
                    .addComponent(stopBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(happyBtn)
                    .addComponent(jLabel1)
                    .addComponent(sadBtn)
                    .addComponent(angryBtn)
                    .addComponent(otherFacialBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nervousBtn)
                    .addComponent(jLabel2)
                    .addComponent(openedBtn)
                    .addComponent(closedBtn)
                    .addComponent(otherGuestureBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(voiceNervousBtn)
                    .addComponent(confidentBtn)
                    .addComponent(angryVoiceBtn)
                    .addComponent(otherVoiceBtn))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openBtnActionPerformed
        j = new JFileChooser();
        int result = j.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = j.getSelectedFile();

            if (file.exists()) {
                openMediaPlayer(file);
            } else {
                jOptionPane.showMessageDialog(null, "No File selected!!!");
            }
            pauseBtn.setEnabled(file.exists());
            stopBtn.setEnabled(file.exists());
        } else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("Cancel was selected");
        }

    }//GEN-LAST:event_openBtnActionPerformed

    private void pauseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseBtnActionPerformed
        mediaPlayer.pause();
        System.out.println(mediaPlayer.getTime() / 1000.0);
        if (!mediaPlayer.isPlaying()) {
            changeEmotionBtnState(true);
        } else {
            changeEmotionBtnState(false);
        }
    }//GEN-LAST:event_pauseBtnActionPerformed

    private void happyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_happyBtnActionPerformed
        updateHashMap((double) mediaPlayer.getTime(), happyBtn.getText(), "facial");
    }//GEN-LAST:event_happyBtnActionPerformed

    private void angryVoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_angryVoiceBtnActionPerformed
        updateHashMap((double) mediaPlayer.getTime(), angryVoiceBtn.getText(), "voice");
    }//GEN-LAST:event_angryVoiceBtnActionPerformed

    private void stopBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopBtnActionPerformed
        mediaPlayer.stop();
        pauseBtn.setEnabled(false);
        stopBtn.setEnabled(false);
        changeEmotionBtnState(false);
    }//GEN-LAST:event_stopBtnActionPerformed

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
        if (!map.isEmpty()) {
            System.out.println(new JSONObject(map));
            JSONObject obj = new JSONObject(map);
            try {
                FileWriter file = new FileWriter(j.getSelectedFile().getName() + ".txt");
                file.write(obj.toString());
                file.flush();
                jOptionPane.showMessageDialog(null, "File created successfully!!!");
            } catch (IOException ex) {
                Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            jOptionPane.showMessageDialog(null, "Cannot Export \nThere are no records!!!");
        }

    }//GEN-LAST:event_exportBtnActionPerformed

    private void nervousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nervousBtnActionPerformed
        updateHashMap((double) mediaPlayer.getTime(), nervousBtn.getText(), "body");
    }//GEN-LAST:event_nervousBtnActionPerformed

    private void voiceNervousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voiceNervousBtnActionPerformed
        updateHashMap((double) mediaPlayer.getTime(), voiceNervousBtn.getText(), "voice");
    }//GEN-LAST:event_voiceNervousBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void otherFacialBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherFacialBtnActionPerformed
        String feeling = JOptionPane.showInputDialog("Other type of facial emotion?");
        if (feeling != null && !feeling.isEmpty()) {
            updateHashMap((double) mediaPlayer.getTime(), feeling, "facial");
        }

    }//GEN-LAST:event_otherFacialBtnActionPerformed

    private void sadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sadBtnActionPerformed
        updateHashMap((double) mediaPlayer.getTime(), sadBtn.getText(), "facial");
    }//GEN-LAST:event_sadBtnActionPerformed

    private void angryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_angryBtnActionPerformed
        updateHashMap((double) mediaPlayer.getTime(), angryBtn.getText(), "facial");
    }//GEN-LAST:event_angryBtnActionPerformed

    private void openedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openedBtnActionPerformed
        updateHashMap((double) mediaPlayer.getTime(), openedBtn.getText(), "body");
    }//GEN-LAST:event_openedBtnActionPerformed

    private void closedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closedBtnActionPerformed
        updateHashMap((double) mediaPlayer.getTime(), closedBtn.getText(), "body");
    }//GEN-LAST:event_closedBtnActionPerformed

    private void confidentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confidentBtnActionPerformed
        updateHashMap((double) mediaPlayer.getTime(), confidentBtn.getText(), "voice");
    }//GEN-LAST:event_confidentBtnActionPerformed

    private void otherGuestureBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherGuestureBtnActionPerformed
        String feeling = JOptionPane.showInputDialog("Other type of guestures?");
        if (feeling != null && !feeling.isEmpty()) {
            updateHashMap((double) mediaPlayer.getTime(), feeling, "body");
        }
    }//GEN-LAST:event_otherGuestureBtnActionPerformed

    private void otherVoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherVoiceBtnActionPerformed
        String feeling = JOptionPane.showInputDialog("Other type of vocal emotion?");
        if (feeling != null && !feeling.isEmpty()) {
            updateHashMap((double) mediaPlayer.getTime(), feeling, "voice");
        }
    }//GEN-LAST:event_otherVoiceBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    public void updateHashMap(Double time, String feeling, String type) {
        if ("facial".equals(type)) {
            if (map.containsKey(time / 1000.0)) {
                map.get(time / 1000.0).facial = feeling;
            } else {
                Annotation annotation = new Annotation();
                annotation.facial = feeling;
                map.put(time / 1000.0, annotation);
            }
        } else if ("body".equals(type)) {
            if (map.containsKey(time / 1000.0)) {
                map.get(time / 1000.0).body = feeling;
            } else {
                Annotation annotation = new Annotation();
                annotation.body = feeling;
                map.put(time / 1000.0, annotation);
            }
        } else if ("voice".equals(type)) {
            if (map.containsKey(time / 1000.0)) {
                map.get(time / 1000.0).voice = feeling;
            } else {
                Annotation annotation = new Annotation();
                annotation.voice = feeling;
                map.put(time / 1000.0, annotation);
            }
        }
    }

    public void changeEmotionBtnState(Boolean state) {
        happyBtn.setEnabled(state);
        sadBtn.setEnabled(state);
        angryBtn.setEnabled(state);
        nervousBtn.setEnabled(state);
        openedBtn.setEnabled(state);
        closedBtn.setEnabled(state);
        voiceNervousBtn.setEnabled(state);
        angryVoiceBtn.setEnabled(state);
        confidentBtn.setEnabled(state);
        otherFacialBtn.setEnabled(state);
        otherGuestureBtn.setEnabled(state);
        otherVoiceBtn.setEnabled(state);
    }

    public void openMediaPlayer(File file) {
        videoPanel.setBackground(Color.BLACK);
        videoPanel.setLayout(new BorderLayout());
        //videoPanel.setSize(700, 500);

        //Creating the canvas and adding it to the panel :
        canvas = new Canvas();
        canvas.setSize(400, 300);
        videoPanel.add(canvas);
        videoPanel.revalidate();
        videoPanel.repaint();

        //Creation a media player :
        mediaPlayerFactory = new MediaPlayerFactory();
        mediaPlayer = mediaPlayerFactory.newEmbeddedMediaPlayer();
        CanvasVideoSurface videoSurface = mediaPlayerFactory.newVideoSurface(canvas);
        mediaPlayer.setVideoSurface(videoSurface);
        mediaPlayer.playMedia(file.getAbsolutePath());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton angryBtn;
    private javax.swing.JButton angryVoiceBtn;
    private javax.swing.JButton closedBtn;
    private javax.swing.JButton confidentBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JButton exportBtn;
    private javax.swing.JLabel fileNameText;
    private javax.swing.JButton happyBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton nervousBtn;
    private javax.swing.JButton openBtn;
    private javax.swing.JButton openedBtn;
    private javax.swing.JButton otherFacialBtn;
    private javax.swing.JButton otherGuestureBtn;
    private javax.swing.JButton otherVoiceBtn;
    private javax.swing.JButton pauseBtn;
    private javax.swing.JButton sadBtn;
    private javax.swing.JButton stopBtn;
    private javax.swing.JPanel videoPanel;
    private javax.swing.JButton voiceNervousBtn;
    // End of variables declaration//GEN-END:variables
}
